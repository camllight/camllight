Caml Light 0.61:
----------------

* Pattern-matching against (C x) where C has several arguments now works
  correctly.

* The fatal error "labels_of_type" has been fixed (it was raised when
  typing e.label, where the type inferred for e is not a record type,
  but an abbreviation for a record type).

* Hashing has been rewritten to give consistent results across all 
  architectures, including when -custom is used.

* output_value and intern_value are now fully compatible across 32-bit and
  64-bit architectures. A 32-bit architecture can read values written
  on a 64-bit architecture.

* Better error message when compiling a .ml whose .mli has not been compiled.

* The preprocessed files are more compatible with cpp: (**) instead of /**/.

* Typos in library interfaces fixed.

Caml Light 0.6:
---------------

* Better handling of type abbreviations. Implementing an abstract type
  as an abbreviation now works correctly.

* Debugging mode (option -g to camlc and camllight) to get access
  to the internals of module implementations.

* 64-bit architectures are supported.

* New library modules:
        genlex    generic lexical analyser
        set       applicative sets over ordered types
        map       applicative maps over ordered types
        baltree   balanced binary trees over ordered types

* "compile" command at toplevel (especially useful in the Macintosh version).

* #directory directive.

* Better support for ISO-Latin-1 character set.

* -i option also works when compiling .mli files.

* Errors and warnings: detection of type redefinitions .ml/.mli; warning for
  partial applications in sequences

* Bug fixes: removed incorrect "optimizations" in stream parsers; incorrect
  declaration of string__compare_strings; stream__stream_get fixed;
  POPTRAP restarts correctly after signal handling.

* Optimizations: io__input_line rewritten in C.

* New functions: parsing__rhs_start, parsing__rhs_end; sys__interactive;
  callback.

* New contributed libraries and tools:
        camlmode  Emacs editing mode for Caml Light
        mletags   Indexing of Caml Light source files for use with Emacs "tags"
        libnum    Arbitrary-precision arithmetic
        libstr    String operations, regular expressions

* The 80386 PC version is now DPMI-compliant, hence it can run under Windows
  (in text mode inside a DOS windows and with no graphics, though).

* More examples, including those from the book "Le langage Caml".

* libunix: tty interface (POSIX termios), popen-style functions.

Caml Light 0.5:
---------------

Language extensions:

* Streams and stream matching, for writing parsers and printers.

* Abstract types can now be implemented as type abbreviations.

* Constructors for variant types are now either constant or
non-constant, instead of having a fixed arity as before. This fixes
the nasty problem of ref(1,2) being rejected because ref has arity 1.

Extensions to the caml light environment:

* A general mechanism to link Caml Light code with C code. As a
consequence, an X-windows interface and a library of Unix system calls
are now provided.

* Two new commands: camllibr, to build libraries, and camlmktop, to
construct custom toplevel systems.

* Several new modules in the library (printf, hashtbl, random, stack,
queue, ...)

* Executable bytecode files are now machine-independent: you can run
the same bytecode file on different architectures.

Bug fixes: lots of them. The most important are:

* Pattern-matching over mutable structures is now correctly compiled:
modifying the matched structure after matching, then accessing parts
of the structure used to fail in various ways; this is now safe.

* Redefinition of exceptions is now correctly handled.

Implementation changes:

* A new garbage collector. The major collector is now incremental,
meaning that garbage collection is even less disruptive than before.

* The produced bytecode is slightly better, due to several new
optimizations in the compiler back-end.

* The linker has been separated from the compiler, and is now clever
enough to avoid linking in useless code. To support this, the format
of .zo files was changed. The new format is much more compact, loads
faster, and supports libraries.

* Autoconfiguration script.

Microcomputer ports:

* Graphics primitives.

* For the Macintosh port, the toplevel system is now a standalone
application, with its own user interface, and does not require MPW
anymore. (The batch compilers still require MPW.)

* The PC ports work in conjunction with TSR line editors.

* The 80386 PC port is now VCPI-compliant, and handles keyboard
interrupts correctly.


Caml Light 0.41:
----------------

* Alternate spelling for floating-point operators: +. -. *. etc.

* New library functions: io__input_line, lexing__create_lexer_string.

* io__seek*, io__pos* more efficient.


Caml Light 0.4:
---------------

* A lexer generator (in the style of lex) and a parser generator (in
  the style of yacc). These tools makes it easier to write compilers
  and similar programs. They also clean up the bootstrapping process a lot.

* Two new ports to microcomputers: to the 386 PC, and to the Amiga.
  The 386 PC version runs in 32 bit protected mode, and takes
  advantage of memory above 640K.

* Many bug fixes.

* A simpler installation procedure.

Caml Light 0.3:
---------------

* First public release.
